# Kakoune user configuration
#

set-option current autowrap_column 80

hook global WinCreate .* %{
    autowrap-enable
}

add-highlighter global/ wrap -word -indent
add-highlighter global/ show-matching
add-highlighter global/ number-lines
add-highlighter global/ column '%opt{autowrap_column}' AutowrapColumn

set-option current tabstop 4
set-option current indentwidth 4

# Just set tabstop to set all tab-related options to the same thing
hook global BufSetOption tabstop=.* %{
    set-option buffer indentwidth %opt{tabstop}
    set-option buffer lsp_tab_size %opt{tabstop}
}

set-option global ui_options ncurses_assistant=none

# Use system clipboard
hook global NormalKey y|d|c %{ nop %sh{
    echo $kak_reg_dquote | xsel -ib
}}

map global user p '<a-!>xsel -ob<ret>'
map global user P '!xsel -ob<ret>'

# Non-shifted <a-j> moves the cursor to the joining point and shiften <a-J>
# moves the cursor
map global normal <a-j> <a-J>
map global normal <a-J> <a-j>

hook global InsertChar \t %{ try %{
    execute-keys -draft "h<a-h><a-k>\A\h+\z<ret><a-;>;%opt{indentwidth}@"
}}

hook global InsertDelete ' ' %{ try %{
     execute-keys -draft 'h<a-h><a-k>\A\h+\z<ret>i<space><esc><lt>'
}}

# Use <tab> and <s-tab> during completion
hook global InsertCompletionShow .* %{
    try %{
        # this command temporarily removes cursors preceded by whitespace;
        # if there are no cursors left, it raises an error, does not
        # continue to execute the mapping commands, and the error is eaten
        # by the `try` command so no warning appears.
        execute-keys -draft 'h<a-K>\h<ret>'
        map window insert <tab> <c-n>
        map window insert <s-tab> <c-p>
    }
}

# Remove the mappings when the popup menu is closed
hook global InsertCompletionHide .* %{
    unmap window insert <tab> <c-n>
    unmap window insert <s-tab> <c-p>
}

hook global BufCreate .* %{ editorconfig-load }

# The default filetype detection only includes *.tex
hook global BufCreate .*\.latex %{
    set-option buffer filetype latex
}

define-command -hidden try-comment-line %{
    try %{
        comment-line
    } catch %{
        execute-keys "<a-x><a-s>_"
        comment-block
    }
}

# Mappings for (un)commenting code
# Each style falls backs to the other if it is not defined
map global user c ':try comment-line catch try-comment-line<ret>'
map global user C ':try comment-block catch comment-line<ret>'

# Setup IDE-ish mode
rename-client main
set-option global jumpclient main
set-option global docsclient main
set-option global toolsclient tools

hook global BufCreate \*grep\* %{
    evaluate-commands %sh{
        if test -z %opt{toolsclient}; then
            echo "set-option global toolsclient tools"
            echo "tilix-new-vertical rename-client tools"
            echo "tilix-focus tools"
        fi
    }
}

# Plugins
source "%val{config}/plugins/kakoune-plug/plug.kak"

# TODO Can plug manage itself without sourcing twice?
#plug "https://github.com/TeddyDD/kakoune-plug"
plug "https://github.com/alexherbo2/auto-pairs.kak"
plug "https://github.com/alexherbo2/move-line.kak"
plug "https://github.com/alexherbo2/search-highlighting.kak"
plug "https://github.com/Delapouite/kakoune-cd"
plug "https://github.com/h-youhei/kakoune-surround"
plug "https://github.com/lenormf/kakoune-extra"
plug "https://github.com/occivink/kakoune-sudo-write"
plug "https://github.com/rubberydub/nord-kakoune.git"
plug "https://github.com/ul/kak-lsp" "n/a"

hook global WinCreate .* %{
    auto-pairs-enable
    search-highlighting-enable
}

set-option global auto_pairs '(' ')' '[' ']' '{' '}' '"' '"' '`' '`' "'"  "'"

declare-user-mode surround
# I don't use view mode that much and view lock mode is more useful anyway
map global normal v ':enter-user-mode surround<ret>'
map global surround s ':surround<ret>' -docstring 'surround'
map global surround c ':change-surround<ret>' -docstring 'change'
map global surround d ':delete-surround<ret>' -docstring 'delete'
map global surround t ':select-surrounding-tag<ret>' -docstring 'select tag'

evaluate-commands %sh{
    $kak_config/plugins/github.com/ul/kak-lsp/target/release/kak-lsp \
        --kakoune -s $kak_session -c $kak_config/kak-lsp.toml
}

# Show hover information
map global user h ':lsp-hover<ret>'
map global normal <a-,> ':enter-user-mode lsp<ret>'

map global normal "'" ':move-line-below %val{count}<ret>'
map global normal "<a-'>" ':move-line-above %val{count}<ret>'

